basePath: /api/v1
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.User:
    properties:
      age:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updatedAt:
        type: string
    type: object
  tp.CreateUpdateUserReqBody:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  tp.UserItem:
    properties:
      age:
        type: integer
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
info:
  contact:
    email: mzinyoni7@yandex.com
    name: Mike Z
  description: Go-people api
  title: Go-people
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Read Users
      parameters:
      - description: paginate with limit e.g 10
        in: query
        name: limit
        type: integer
      - description: paginate with offset e.g 5
        in: query
        name: offset
        type: integer
      - description: search by id
        in: query
        name: id
        type: integer
      - description: search by name
        in: query
        name: name
        type: string
      - description: search by surname
        in: query
        name: surname
        type: string
      - description: search by patronymic
        in: query
        name: patronymic
        type: string
      - description: search by gender
        in: query
        name: gender
        type: string
      - description: search by age
        in: query
        name: age
        type: string
      - description: search by nationality
        in: query
        name: nationality
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tp.UserItem'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Read Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tp.CreateUpdateUserReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create User
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
      summary: Delete User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Read User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
      summary: Read User
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tp.CreateUpdateUserReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
      summary: Update User
      tags:
      - users
swagger: "2.0"
